# Container analysis using Snyk.
# This workflow checks out the code, builds a container image using Docker and
# scans that image for vulnerabilities using Snyk.

name: Container Analysis

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]
  schedule:
    # Run at AM 04:00 on every Monday
    - cron:  '0 4 * * MON'

jobs:
  snyk:
    runs-on: ubuntu-latest
    steps:
    - name: Install Docker Scan
      run: |
        mkdir -p ~/.docker/cli-plugins
        curl https://github.com/docker/scan-cli-plugin/releases/download/latest/docker-scan_linux_amd64 -L -s -S -o ~/.docker/cli-plugins/docker-scan
        chmod +x ~/.docker/cli-plugins/docker-scan

    - uses: actions/checkout@v2

    - name: Build a Docker image
      run: docker build -t keinos/vscode-dev-container-go-test .

    - name: Docker scan
      run: docker scan keinos/vscode-dev-container-go-test

    - name: Run Snyk to check Docker image for vulnerabilities
      # Snyk can be used to break the build when it detects vulnerabilities.
      # In this case we want to upload the issues to GitHub Code Scanning
      continue-on-error: true
      uses: snyk/actions/docker@master
      env:
        # In order to use the Snyk Action you will need to have a Snyk API token.
        # More details in https://github.com/snyk/actions#getting-your-snyk-token
        # or you can signup for free at https://snyk.io/login
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: keinos/vscode-dev-container-go-test
        args: --file=Dockerfile

    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: snyk.sarif
